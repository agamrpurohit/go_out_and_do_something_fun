Onion approach?
  Check time, weather.
  If it's early in the morning -> long hike, breakfast, bagels
  Afternoon -> short hike, lunch, current happennings
  Evening -> dinner, walk in the city, concert, shows

1. User instance calls the recommend function
2. Engine instance filters available activities based on weather
3. Engine instance filters available activities based on what is/will be open in the next hour/today
4. Engine instance sorts the remaining activities based on the shortest data distance to the activities in the User 'likes'
5. Top N are pushed to the recommendations stack

# Weather filter
  Outdoor vs indoor suggestions
  40-80 + Sunny/Cloudy -> Outdoor ok

# Open filter
  Establishment is open now -> ok
  Establishment is closed now, but will be open in the time it takes to get there + 30 minutes to get ready -> ok
  Everything else -> not ok

Database
  |
City Cache <- Weather
  |
Engine
  |
User
